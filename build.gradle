plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.onclass.tecnology'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.4")
	set('lombokVersion', "1.18.38")
	set('mapstructVersion', "1.6.3")
	set('resilience4jVersion', "2.3.0")
}

jacoco {
	toolVersion = "0.8.11"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.postgresql:r2dbc-postgresql'
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
	testImplementation "org.mapstruct:mapstruct:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()

	filter {
        includeTestsMatching "com.onclass.technology.domain.usecase.*"
        includeTestsMatching "com.onclass.technology.infrastructure.entrypoints.handler.*"

        jacocoTestReport {
            dependsOn test
            reports {
                xml.required = true
                html.required = true
                csv.required = false
            }
        }
    }
}
